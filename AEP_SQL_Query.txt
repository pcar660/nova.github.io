


---- Important query which work--------
---Create the data ------
CREATE TABLE test_derived_datasets_v5 ( novaCrmId text primary identity namespace 'novaCrmId') WITH(LABEL='PROFILE');
----------------------

------Ingest the data ------------

INSERT INTO test_derived_datasets_v5
SELECT STRUCT(
    novaCrm_Id AS novaCrmId) AS _capgeminiamerptrsd
FROM
    (SELECT DISTINCT
     A._capgeminiamerptrsd.novaEventProfileCRMId AS novaCrm_Id
FROM nova_web_event_v2 A
WHERE A.eventType = 'web.formFilledOut' and A._capgeminiamerptrsd.novaEventProfileCRMId  is not null) AS D;

---------------
_______________________--_________________


CREATE AUDIENCE sql_nova_crm_audience_table WITH (primary_identity='_capgeminiamerptrsd.novaEventProfileCRMId', identity_namespace='novaCrmId',schema=sql_nova_crm_audience_schema) AS SELECT DISTINCT _capgeminiamerptrsd.novaEventProfileCRMId FROM nova_web_event_v2 WHERE eventType = 'web.formFilledOut';
------------------------------


CREATE TABLE test_derived_datasets_v5 ( novaCrmId text primary identity namespace 'novaCrmId') WITH(LABEL='PROFILE');



 SHOW TABLES

Drop table test_derived_datasets

-----------------


query : To create derived data set:
CREATE TABLE test_derived_datasets ( id text primary identity namespace 'IDFA') WITH(LABEL='PROFILE');

----------------------

CREATE TABLE test_derived_datasets ( id text primary identity namespace 'IDFA') WITH(LABEL='PROFILE');

SELECT eventType, COUNT(*) AS eventCount FROM nova_web_event_v2 GROUP BY eventType;

--------------------------
SELECT eventType, COUNT(*) AS eventCount FROM nova_web_event_v2 GROUP BY eventType;

SELECT DISTINCT _capgeminiamerptrsd.novaEventProfileCRMId
FROM nova_web_event_v2
WHERE eventType = 'web.formFilledOut';

-----------------

INSERT INTO test_derived_datasets
SELECT DISTINCT _capgeminiamerptrsd.novaEventProfileCRMId as id
FROM nova_web_event_v2
WHERE eventType = 'web.formFilledOut' and  _capgeminiamerptrsd.novaEventProfileCRMId is not null;-




Query: 
select eventType from nova_web_event_v2 where eventType  <> 'commerce.productListAdds'

select * from nova_web_event_v2 where eventType  NOT IN ( 'commerce.productListAdds',  '%web.webpagedetails.pageViews%', 'web.webinteraction.linkClicks')

select * from nova_web_event_v2 where eventType  NOT IN ( 'commerce.productListAdds',  'web.webinteraction.linkClicks') ORDER BY timestamp DESC;

select * from nova_web_event_v2 where eventType  NOT IN ( 'commerce.productListAdds',  'web.webinteraction.linkClicks') ORDER BY timestamp ASC;


Output:
select * from push_sdk_experience_event WHERE ARRAY_CONTAINS(identityMap['ECID'], MAP('id', '73747160645486974836086027323144823468'));


SELECT *
FROM push_sdk_experience_event
WHERE ARRAY_CONTAINS(identityMap['ECID'], STRUCT('73747160645486974836086027323144823468' AS id));

SELECT *
FROM push_sdk_experience_event
WHERE ARRAY_CONTAINS(identityMap['ECID'], STRUCT('73747160645486974836086027323144823468' AS id, NULL AS authenticatedState, NULL AS primary));


SELECT *
FROM push_sdk_experience_event
WHERE ARRAY_CONTAINS(identityMap['ECID'], '{(ambiguous, 73747160645486974836086027323144823468, t)}');

SELECT *
FROM push_sdk_experience_event
WHERE EXISTS (
	SELECT 1
	FROM UNNEST(identityMap['ECID']) AS ecid_string
	WHERE ecid_string LIKE '%34026952640605236528718207667809601762%'
);

SELECT identityMap['ECID'].0
FROM push_sdk_experience_event
LIMIT 10;

INSERT INTO novaProfilePersonlizeDataCampaignFeb2025_v1(novaCrmId, 
    productName_novaProfilePersonlizeDataCampaignFeb2025_v1, 
    count_novaProfilePersonlizeDataCampaignFeb2025_v1) 
  SELECT
    _capgeminiamerptrsd.novaEventProfileCRMId,
    _capgeminiamerptrsd.novaProductName,
    COUNT(*)
FROM
    nova_web_event_v2
WHERE
    timeStamp >= '2025-02-25 00:00:00'
GROUP BY
    _capgeminiamerptrsd.novaProductName,
    _capgeminiamerptrsd.novaEventProfileCRMId;



SELECT *
FROM profile_snapshot_export_cd1fc611_b3c4_476c_9f3a_e5c314627706
WHERE PushNotificationDetails IS NOT NULL;

